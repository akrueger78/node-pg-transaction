{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"","name":"node-pg-transaction","body":"[![Build Status](https://travis-ci.org/goodybag/node-pg-transaction.png)](https://travis-ci.org/goodybag/node-pg-transaction)\r\n\r\nMake it easier to write transactions for PostgreSQL using [node-postgres](https://github.com/brianc/node-postgres).\r\n\r\nThe callback and event emitter styles both work.  \r\n**Note:** if you use a callback, then the error event won't be emitted. This is consistent with node-postgres.\r\n\r\n##Installation:\r\n\r\nTo install the most recent release from npm, run:\r\n\r\n```\r\nnpm install pg-transaction\r\n```\r\n\r\n## Methods:\r\n\r\n```javascript\r\nbegin([callback]);\r\nquery(); // This is pg.Client.query from node-postgres. There are various possible arguments look at its documentation\r\nsavepoint(savepoint, [callback]);\r\nrelease(savepoint, [callback]);\r\nrollback([savepoint], [callback]);\r\ncommit([callback]);\r\nabort([callback]);\r\n```\r\n\r\n## Events:\r\n\r\n- error\r\n\r\n## Example:\r\n\r\n```javascript\r\n\r\n/**\r\n * Module dependencies\r\n */\r\n\r\nvar\r\n  // PostgreSQL modules\r\n  pg = require('pg')\r\n, Transaction = require('pg-transaction')\r\n\r\n  // Configuration stuff\r\n, connectionString = process.env['PG_CON'] || ''\r\n;\r\n\r\nvar die = function(err){\r\n  if (err) throw err;\r\n};\r\n\r\nvar client = new pg.Client(connectionString);\r\nclient.connect();\r\n\r\nclient.query(\"CREATE TEMP TABLE beatles(name varchar(10), height integer, birthday timestamptz)\");\r\n\r\nvar tx = new Transaction(client);\r\ntx.on('error', die);\r\n\r\ntx.begin();\r\ntx.query(\"INSERT INTO beatles(name, height, birthday) values($1, $2, $3)\", ['Ringo', 67, new Date(1945, 11, 2)]);\r\ntx.savepoint('savepoint1');\r\ntx.query(\"INSERT INTO beatles(name, height, birthday) values($1, $2, $3)\", ['John', 68, new Date(1944, 10, 13)]);\r\ntx.rollback('savepoint1'); // all statements after savepoint1 are undone (John will not be inserted)\r\ntx.release('savepoint1'); // can no longer use savepoint1 as a point to rollback to\r\ntx.commit();\r\n\r\nclient.query(\"SELECT COUNT(*) AS count FROM beatles\", function(err, result){\r\n  if (err) return die(err);\r\n  console.log(result.rows[0].count); // 1\r\n  client.end();\r\n});\r\n```\r\n\r\n## Contributors:\r\n\r\n- [Lalit Kapoor](https://github.com/lalitkapoor)\r\n\r\n### Special thanks to the following:\r\n\r\n- [Brian M. Carlson](https://github.com/brianc)\r\n"}